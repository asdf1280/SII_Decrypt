unit structure of a save game, with local mods included. (for TruckersMP)
It's interesting that we can also get the structures(flare_vehicle) that aren't included in default game.sii. Using similar methods, we could also get struct for other data classes in ETS2.

struct economy { // ID 0x01
        ptr bank; // ID 0x39
        ptr player; // ID 0x39
        ptr[] companies; // ID 0x3A
        ptr[] garages; // ID 0x3A
        str[] garage_ignore_list; // ID 0x02
        ptr game_progress; // ID 0x39
        ptr event_queue; // ID 0x39
        ptr mail_ctrl; // ID 0x39
        ptr oversize_offer_ctrl; // ID 0x39
        uint game_time; // ID 0x27
        float game_time_secs; // ID 0x05
        uint game_time_initial; // ID 0x27
        uint achievements_added; // ID 0x27
        bool new_game; // ID 0x35
        uint total_distance; // ID 0x27
        uint experience_points; // ID 0x27
        uint adr; // ID 0x27
        uint long_dist; // ID 0x27
        uint heavy; // ID 0x27
        uint fragile; // ID 0x27
        uint urgent; // ID 0x27
        uint mechanical; // ID 0x27
        uint[] user_colors; // ID 0x28
        ptr delivery_log; // ID 0x39
        ptr ferry_log; // ID 0x39
        ptr police_offence_log; // ID 0x39
        uint stored_camera_mode; // ID 0x27
        uint stored_actor_state; // ID 0x27
        uint stored_high_beam_style; // ID 0x27
        float[2] stored_actor_windows_state; // ID 0x07
        uint stored_actor_wiper_mode; // ID 0x27
        uint stored_actor_retarder; // ID 0x27
        uint stored_display_mode_on_dashboard; // ID 0x27
        uint stored_display_mode_on_gps; // ID 0x27
        uint stored_dashboard_map_mode; // ID 0x27
        uint stored_world_map_zoom; // ID 0x27
        ulong stored_online_job_id; // ID 0x33
        int[3][] stored_online_gps_behind; // ID 0x12
        int[3][] stored_online_gps_ahead; // ID 0x12
        ptr[] stored_online_gps_behind_waypoints; // ID 0x3A
        ptr[] stored_online_gps_ahead_waypoints; // ID 0x3A
        ptr[] stored_online_gps_avoid_waypoints; // ID 0x3A
        ptr stored_special_job; // ID 0x39
        ptr police_ctrl; // ID 0x39
        uint stored_map_state; // ID 0x27
        long stored_gas_pump_money; // ID 0x31
        float stored_weather_change_timer; // ID 0x05
        uint stored_current_weather; // ID 0x27
        float stored_rain_wetness; // ID 0x05
        int time_zone; // ID 0x25
        str time_zone_name; // ID 0x01
        int[3] last_ferry_position; // ID 0x11
        bool stored_show_weigh; // ID 0x35
        bool stored_need_to_weigh; // ID 0x35
        int[3] stored_nav_start_pos; // ID 0x11
        int[3] stored_nav_end_pos; // ID 0x11
        int[3][] stored_gps_behind; // ID 0x12
        int[3][] stored_gps_ahead; // ID 0x12
        ptr[] stored_gps_behind_waypoints; // ID 0x3A
        ptr[] stored_gps_ahead_waypoints; // ID 0x3A
        ptr[] stored_gps_avoid_waypoints; // ID 0x3A
        int[3] stored_start_tollgate_pos; // ID 0x11
        uint stored_tutorial_state; // ID 0x27
        ptr[] stored_map_actions; // ID 0x3A
        uint clean_distance_counter; // ID 0x27
        uint clean_distance_max; // ID 0x27
        uint no_cargo_damage_distance_counter; // ID 0x27
        uint no_cargo_damage_distance_max; // ID 0x27
        uint no_violation_distance_counter; // ID 0x27
        uint no_violation_distance_max; // ID 0x27
        uint total_real_time; // ID 0x27
        float real_time_seconds; // ID 0x05
        token[] visited_cities; // ID 0x04
        uint[] visited_cities_count; // ID 0x28
        token last_visited_city; // ID 0x03
        ulong[] discovered_cutscene_items; // ID 0x34
        short[] discovered_cutscene_items_states; // ID 0x2C
        token[] unlocked_dealers; // ID 0x04
        token[] unlocked_recruitments; // ID 0x04
        uint total_screeshot_count; // ID 0x27
        uint undamaged_cargo_row; // ID 0x27
        uint service_visit_count; // ID 0x27
        float[3] last_service_pos; // ID 0x09
        uint gas_station_visit_count; // ID 0x27
        float[3] last_gas_station_pos; // ID 0x09
        uint emergency_call_count; // ID 0x27
        uint ai_crash_count; // ID 0x27
        uint truck_color_change_count; // ID 0x27
        uint red_light_fine_count; // ID 0x27
        uint cancelled_job_count; // ID 0x27
        uint total_fuel_litres; // ID 0x27
        long total_fuel_price; // ID 0x31
        token[] transported_cargo_types; // ID 0x04
        str[] achieved_feats; // ID 0x02
        uint[] discovered_roads; // ID 0x28
        ulong[] discovered_items; // ID 0x34
        ptr[] drivers_offer; // ID 0x3A
        ptr used_vehicle_assortment; // ID 0x39
        ptr freelance_truck_offer; // ID 0x39
        uint trucks_bought_online; // ID 0x27
        float special_cargo_timer; // ID 0x05
        str[] screen_access_list; // ID 0x02
        str[] screen_visit_list; // ID 0x02
        ptr[] driver_pool; // ID 0x3A
        ptr registry; // ID 0x39
        bool company_jobs_invitation_sent; // ID 0x35
        ulong company_check_hash; // ID 0x33
        short[] relations; // ID 0x2C
        ptr[] bus_stops; // ID 0x3A
        ptr bus_job_log; // ID 0x39
        uint bus_experience_points; // ID 0x27
        uint bus_total_distance; // ID 0x27
        uint bus_finished_job_count; // ID 0x27
        uint bus_cancelled_job_count; // ID 0x27
        uint bus_total_passengers; // ID 0x27
        uint bus_total_stops; // ID 0x27
        uint bus_game_time; // ID 0x27
        uint bus_playing_time; // ID 0x27
}

struct bank { // ID 0x02
        long money_account; // ID 0x31
        long coinsurance_fixed; // ID 0x31
        float coinsurance_ratio; // ID 0x05
        float accident_severity; // ID 0x05
        ptr[] loans; // ID 0x3A
        bool app_enabled; // ID 0x35
        long loan_limit; // ID 0x31
        float payment_timer; // ID 0x05
        bool overdraft; // ID 0x35
        float overdraft_timer; // ID 0x05
        uint overdraft_warn_count; // ID 0x27
        bool sell_players_truck_later; // ID 0x35
        bool sell_players_trailer_later; // ID 0x35
}

struct player { // ID 0x03
        token hq_city; // ID 0x03
        ptr[] trailers; // ID 0x3A
        ptr[] trailer_utilization_logs; // ID 0x3A
        ptr[] trailer_defs; // ID 0x3A
        ptr assigned_truck; // ID 0x3B
        ptr my_truck; // ID 0x3B
        float[8_7] my_truck_placement; // ID 0x19
        bool my_truck_placement_valid; // ID 0x35
        float[8_7] my_trailer_placement; // ID 0x19
        float[8_7][] my_slave_trailer_placements; // ID 0x1A
        bool my_trailer_attached; // ID 0x35
        bool my_trailer_used; // ID 0x35
        ptr assigned_trailer; // ID 0x3B
        ptr my_trailer; // ID 0x3B
        bool assigned_trailer_connected; // ID 0x35
        float[8_7] truck_placement; // ID 0x19
        float[8_7] trailer_placement; // ID 0x19
        float[8_7][] slave_trailer_placements; // ID 0x1A
        bool schedule_transfer_to_hq; // ID 0x35
        bool schedule_quick_travel; // ID 0x35
        uint flags; // ID 0x27
        float gas_pump_money_debt; // ID 0x05
        ptr current_job; // ID 0x39
        ptr current_bus_job; // ID 0x39
        ptr selected_job; // ID 0x39
        uint driving_time; // ID 0x27
        uint sleeping_count; // ID 0x27
        uint free_roam_distance; // ID 0x27
        float discovary_distance; // ID 0x05
        ptr[] dismissed_drivers; // ID 0x3A
        ptr[] trucks; // ID 0x3A
        ptr[] truck_profit_logs; // ID 0x3A
        ptr[] drivers; // ID 0x3A
        uint[] driver_flags; // ID 0x28
        uint[] driver_readiness_timer; // ID 0x28
        uint[] driver_undrivable_truck_timers; // ID 0x28
        bool[] driver_quit_warned; // ID 0x36
}

struct trailer { // ID 0x04
        weak_ptr trailer_definition; // ID 0x3D
        bool oversize; // ID 0x35
        float cargo_mass; // ID 0x05
        float cargo_damage; // ID 0x05
        float virtual_rear_wheels_offset; // ID 0x05
        ptr slave_trailer; // ID 0x39
        bool is_private; // ID 0x35
        float trailer_body_wear; // ID 0x05
        float trailer_body_wear_unfixable; // ID 0x05
        ptr[] accessories; // ID 0x3A
        uint odometer; // ID 0x27
        float odometer_float_part; // ID 0x05
        uint integrity_odometer; // ID 0x27
        float integrity_odometer_float_part; // ID 0x05
        uint trip_fuel_l; // ID 0x27
        float trip_fuel; // ID 0x05
        uint trip_recuperation_kwh; // ID 0x27
        float trip_recuperation; // ID 0x05
        uint trip_distance_km; // ID 0x27
        float trip_distance; // ID 0x05
        uint trip_time_min; // ID 0x27
        float trip_time; // ID 0x05
        str license_plate; // ID 0x01
        float chassis_wear; // ID 0x05
        float chassis_wear_unfixable; // ID 0x05
        float[] wheels_wear; // ID 0x06
        float[] wheels_wear_unfixable; // ID 0x06
}

struct vehicle_accessory { // ID 0x05
        str data_path; // ID 0x01
        uint refund; // ID 0x2F
}

struct vehicle_paint_job_accessory { // ID 0x06
        float[3] mask_r_color; // ID 0x09
        float[3] mask_g_color; // ID 0x09
        float[3] mask_b_color; // ID 0x09
        float[3] flake_color; // ID 0x09
        float[3] flip_color; // ID 0x09
        float[3] base_color; // ID 0x09
        str data_path; // ID 0x01
        uint refund; // ID 0x2F
}

struct vehicle_addon_accessory { // ID 0x07
        token[] slot_name; // ID 0x04
        str[] slot_hookup; // ID 0x02
        str data_path; // ID 0x01
        uint refund; // ID 0x2F
}

struct vehicle_wheel_accessory { // ID 0x08
        short offset; // ID 0x2B
        float[3] paint_color; // ID 0x09
        str data_path; // ID 0x01
        uint refund; // ID 0x2F
}

struct vehicle_cargo_accessory { // ID 0x09
        weak_ptr cargo_data; // ID 0x3D
        ulong model_seed; // ID 0x33
        str data_path; // ID 0x01
        uint refund; // ID 0x2F
}

struct trailer_utilization_log { // ID 0x0A
        ptr[] entries; // ID 0x3A
        uint total_driven_distance_km; // ID 0x27
        uint total_transported_cargoes; // ID 0x27
        float total_transported_weight; // ID 0x05
}

struct trailer_utilization_log_entry { // ID 0x0B
        uint economy_day; // ID 0x27
        uint use_time; // ID 0x27
}

struct trailer_def { // ID 0x0C
        str trailer; // ID 0x01
        float gross_trailer_weight_limit; // ID 0x05
        float chassis_mass; // ID 0x05
        float body_mass; // ID 0x05
        uint axles; // ID 0x27
        float volume; // ID 0x05
        token body_type; // ID 0x03
        token chain_type; // ID 0x03
        token[] country_validity; // ID 0x04
        float[] mass_ratio; // ID 0x06
        float length; // ID 0x05
        str source_name; // ID 0x01
}

struct vehicle { // ID 0x0D
        float engine_wear; // ID 0x05
        float transmission_wear; // ID 0x05
        float cabin_wear; // ID 0x05
        float engine_wear_unfixable; // ID 0x05
        float transmission_wear_unfixable; // ID 0x05
        float cabin_wear_unfixable; // ID 0x05
        float fuel_relative; // ID 0x05
        float rheostat_factor; // ID 0x05
        float[4][] user_mirror_rot; // ID 0x18
        float[3] user_head_offset; // ID 0x09
        float user_fov; // ID 0x05
        float user_wheel_up_down; // ID 0x05
        float user_wheel_front_back; // ID 0x05
        float user_mouse_left_right_default; // ID 0x05
        float user_mouse_up_down_default; // ID 0x05
        ptr[] accessories; // ID 0x3A
        uint odometer; // ID 0x27
        float odometer_float_part; // ID 0x05
        uint integrity_odometer; // ID 0x27
        float integrity_odometer_float_part; // ID 0x05
        uint trip_fuel_l; // ID 0x27
        float trip_fuel; // ID 0x05
        uint trip_recuperation_kwh; // ID 0x27
        float trip_recuperation; // ID 0x05
        uint trip_distance_km; // ID 0x27
        float trip_distance; // ID 0x05
        uint trip_time_min; // ID 0x27
        float trip_time; // ID 0x05
        str license_plate; // ID 0x01
        float chassis_wear; // ID 0x05
        float chassis_wear_unfixable; // ID 0x05
        float[] wheels_wear; // ID 0x06
        float[] wheels_wear_unfixable; // ID 0x06
}

struct vehicle_drv_plate_accessory { // ID 0x0E
        str text; // ID 0x01
        token[] slot_name; // ID 0x04
        str[] slot_hookup; // ID 0x02
        str data_path; // ID 0x01
        uint refund; // ID 0x2F
}

struct profit_log { // ID 0x0F
        ptr[] stats_data; // ID 0x3A
        uint acc_distance_free; // ID 0x27
        uint acc_distance_on_job; // ID 0x27
        uint history_age; // ID 0x27
}

struct profit_log_entry { // ID 0x10
        long revenue; // ID 0x31
        long wage; // ID 0x31
        long maintenance; // ID 0x31
        long fuel; // ID 0x31
        uint distance; // ID 0x27
        bool distance_on_job; // ID 0x35
        uint cargo_count; // ID 0x27
        token cargo; // ID 0x03
        token source_city; // ID 0x03
        token source_company; // ID 0x03
        token destination_city; // ID 0x03
        token destination_company; // ID 0x03
        uint timestamp_day; // ID 0x27
}

struct driver_player { // ID 0x11
        ptr profit_log; // ID 0x39
}

struct driver_ai { // ID 0x12
        uint adr; // ID 0x27
        uint long_dist; // ID 0x27
        uint heavy; // ID 0x27
        uint fragile; // ID 0x27
        uint urgent; // ID 0x27
        uint mechanical; // ID 0x27
        token hometown; // ID 0x03
        token current_city; // ID 0x03
        uint state; // ID 0x27
        int on_duty_timer; // ID 0x25
        long extra_maintenance; // ID 0x31
        ptr driver_job; // ID 0x39
        uint experience_points; // ID 0x27
        uint training_policy; // ID 0x27
        ptr adopted_truck; // ID 0x39
        ptr assigned_truck; // ID 0x3B
        float assigned_truck_efficiency; // ID 0x05
        uint assigned_truck_axle_count; // ID 0x27
        float assigned_truck_mass; // ID 0x05
        float slot_truck_efficiency; // ID 0x05
        uint slot_truck_axle_count; // ID 0x27
        float slot_truck_mass; // ID 0x05
        ptr adopted_trailer; // ID 0x39
        ptr assigned_trailer; // ID 0x3B
        token old_hometown; // ID 0x03
        ptr profit_log; // ID 0x39
}

struct job_info { // ID 0x13
        weak_ptr cargo; // ID 0x3D
        weak_ptr source_company; // ID 0x3D
        weak_ptr target_company; // ID 0x3D
        uint cargo_model_index; // ID 0x27
        bool is_articulated; // ID 0x35
        bool is_cargo_market_job; // ID 0x35
        uint start_time; // ID 0x27
        short planned_distance_km; // ID 0x2B
        short ferry_time; // ID 0x2B
        short ferry_price; // ID 0x2B
        short urgency; // ID 0x2B
        ptr special; // ID 0x39
        uint units_count; // ID 0x27
        float fill_ratio; // ID 0x05
}

struct company { // ID 0x14
        weak_ptr permanent_data; // ID 0x3D
        ptr delivered_trailer; // ID 0x39
        float[8_7][] delivered_pos; // ID 0x1A
        ptr[] job_offer; // ID 0x3A
        uint[] cargo_offer_seeds; // ID 0x28
        bool discovered; // ID 0x35
        uint reserved_trailer_slot; // ID 0x27
        uint state; // ID 0x27
}

struct job_offer_data { // ID 0x15
        str target; // ID 0x01
        uint expiration_time; // ID 0x27
        uint urgency; // ID 0x27
        short shortest_distance_km; // ID 0x2B
        short ferry_time; // ID 0x2B
        short ferry_price; // ID 0x2B
        weak_ptr cargo; // ID 0x3D
        str company_truck; // ID 0x01
        weak_ptr trailer_variant; // ID 0x3D
        weak_ptr trailer_definition; // ID 0x3D
        uint units_count; // ID 0x27
        float fill_ratio; // ID 0x05
        float[8_7][] trailer_place; // ID 0x1A
}

struct garage { // ID 0x16
        ptr[] vehicles; // ID 0x3C
        ptr[] drivers; // ID 0x3C
        ptr[] trailers; // ID 0x3C
        uint status; // ID 0x27
        ptr profit_log; // ID 0x39
        float productivity; // ID 0x05
}

struct game_progress { // ID 0x17
        ptr generic_transports; // ID 0x39
        ptr undamaged_transports; // ID 0x39
        ptr clean_transports; // ID 0x39
        str[] owned_trucks; // ID 0x02
}

struct transport_data { // ID 0x18
        uint distance; // ID 0x27
        uint time; // ID 0x27
        long money; // ID 0x31
        uint[] count_per_adr; // ID 0x28
        str[] docks; // ID 0x02
        uint[] count_per_dock; // ID 0x28
}

struct economy_event_queue { // ID 0x19
        ptr[] data; // ID 0x3A
}

struct economy_event { // ID 0x1A
        uint time; // ID 0x27
        ptr unit_link; // ID 0x3B
        uint param; // ID 0x27
}

struct mail_ctrl { // ID 0x1B
        ptr[] inbox; // ID 0x3A
        uint last_id; // ID 0x27
        uint unread_count; // ID 0x27
        ptr[] pending_mails; // ID 0x3A
        float[] pmail_timers; // ID 0x06
}

struct mail_def { // ID 0x1C
        uint id; // ID 0x27
        str mail_text_ref; // ID 0x01
        str[] param_keys; // ID 0x02
        str[] param_values; // ID 0x02
        bool read; // ID 0x35
        bool accepted; // ID 0x35
        bool expired; // ID 0x35
        int custom_data; // ID 0x25
}

struct oversize_offer_ctrl { // ID 0x1D
        ptr[] route_offers; // ID 0x3A
}

struct oversize_route_offers { // ID 0x1E
        ptr[] offers; // ID 0x3A
        weak_ptr route; // ID 0x3D
}

struct oversize_offer { // ID 0x1F
        weak_ptr offer_data; // ID 0x3D
        str truck; // ID 0x01
        uint expiration; // ID 0x27
        token intro_cutscene; // ID 0x03
        token outro_cutscene; // ID 0x03
}

struct delivery_log { // ID 0x20
        int version; // ID 0x25
        ptr[] entries; // ID 0x3A
        uint cached_jobs_count; // ID 0x27
}

struct delivery_log_entry { // ID 0x21
        str[] params; // ID 0x02
}

struct ferry_log { // ID 0x22
        ptr[] entries; // ID 0x3A
}

struct ferry_log_entry { // ID 0x23
        token ferry; // ID 0x03
        token connection; // ID 0x03
        uint last_visit; // ID 0x27
        uint use_count; // ID 0x27
}

struct police_offence_log { // ID 0x24
        ptr[] detailed_history_entries; // ID 0x3A
        uint[] offence_total_counts; // ID 0x28
        long[] offence_total_fines; // ID 0x32
}

struct police_ctrl { // ID 0x25
        float[] offence_timer; // ID 0x06
        uint[] offence_counter; // ID 0x28
        bool[] offence_valid; // ID 0x36
}

struct gps_waypoint_storage { // ID 0x26
        int[3] nav_node_position; // ID 0x11
        enum<any=2, backward=1, forward=0> direction; // ID 0x37
}

struct map_action { // ID 0x27
        ulong[] id_params; // ID 0x34
        str name; // ID 0x01
        token command; // ID 0x03
        float[] num_params; // ID 0x06
        str[] str_params; // ID 0x02
        token[] target_tags; // ID 0x04
        float target_range; // ID 0x05
        enum<condition=1, condition_retry=4, default=0, fallback=2, mandatory=3> type; // ID 0x37
}

struct used_vehicle_assortment { // ID 0x28
        uint next_generation_game_time; // ID 0x27
        ptr[] trucks; // ID 0x3A
}

struct used_truck_offer { // ID 0x29
        bool lefthand_traffic; // ID 0x35
        ptr truck; // ID 0x39
        long price; // ID 0x31
        uint expiration_game_time; // ID 0x27
}

struct registry { // ID 0x2A
        int[] data; // ID 0x26
        bool[] valid; // ID 0x36
        uint[] keys; // ID 0x28
        uint[] index; // ID 0x28
}

struct bus_stop { // ID 0x2B
        bool discovered; // ID 0x35
        ptr[] lines_offer; // ID 0x3A
}

struct bus_job_log { // ID 0x2C
        int version; // ID 0x25
        ptr[] entries; // ID 0x3A
}

struct accessory_hookup_data { // ID 0x2D
        str model; // ID 0x01
        str coll; // ID 0x01
        token look; // ID 0x03
        token variant; // ID 0x03
        enum<aux_light=1, vehicle=0> electric_type; // ID 0x37
        str name; // ID 0x01
        str icon; // ID 0x01
        str[] info; // ID 0x02
        long price; // ID 0x31
        uint unlock; // ID 0x27
        enum<aftermarket=2, factory=1, licensed=3, unknown=0> part_type; // ID 0x37
        str[] suitable_for; // ID 0x02
        str[] conflict_with; // ID 0x02
        str[] defaults; // ID 0x02
        str[] overrides; // ID 0x02
        token[] require; // ID 0x04
        bool sync_over_network; // ID 0x35
        uint steam_inventory_id; // ID 0x27
}

struct accessory_hookup_int_data { // ID 0x2E
        ptr[] data; // ID 0x3A
        str model; // ID 0x01
        str coll; // ID 0x01
        token look; // ID 0x03
        token variant; // ID 0x03
        enum<aux_light=1, vehicle=0> electric_type; // ID 0x37
        str name; // ID 0x01
        str icon; // ID 0x01
        str[] info; // ID 0x02
        long price; // ID 0x31
        uint unlock; // ID 0x27
        enum<aftermarket=2, factory=1, licensed=3, unknown=0> part_type; // ID 0x37
        str[] suitable_for; // ID 0x02
        str[] conflict_with; // ID 0x02
        str[] defaults; // ID 0x02
        str[] overrides; // ID 0x02
        token[] require; // ID 0x04
        bool sync_over_network; // ID 0x35
        uint steam_inventory_id; // ID 0x27
}

struct flare_vehicle { // ID 0x2F
        enum<aux=24, beacon=512, brake=32, electrics=16384, high_beam=4, left_blinker=64, low_beam=2, parking=1, police_hooter=8192, reverse=256, right_blinker=128> light_type; // ID 0x37
        enum<point=0, spot=1> type; // ID 0x37
        enum<candela_hue_saturation=2, lumen_hue_saturation=1, lux_hue_saturation=3, rgb=0> setup; // ID 0x37
        float[3] ambient_color; // ID 0x09
        float[3] diffuse_color; // ID 0x09
        float[3] specular_color; // ID 0x09
        float range; // ID 0x05
        float cut_range; // ID 0x05
        enum<forward=0, vertical=1> cut_direction; // ID 0x37
        float attenuation_start_range; // ID 0x05
        bool forward_distance; // ID 0x35
        float inner_angle; // ID 0x05
        float outer_angle; // ID 0x05
        float fade_distance; // ID 0x05
        float fade_span; // ID 0x05
        float yaw_offset; // ID 0x05
        float pitch_offset; // ID 0x05
        float roll_offset; // ID 0x05
        bool always_on; // ID 0x35
        enum<all=0, angle=3, narrow=2, wide=1> dir_type; // ID 0x37
        float flare_inner_angle; // ID 0x05
        float flare_outer_angle; // ID 0x05
        float scaling_start_distance; // ID 0x05
        float scaling_end_distance; // ID 0x05
        float scale_factor; // ID 0x05
        float default_scale; // ID 0x05
        str model; // ID 0x01
        float visual_offset; // ID 0x05
        float state_change_duration; // ID 0x05
        bool editor; // ID 0x35
        float[3] editor_min; // ID 0x09
        float[3] editor_max; // ID 0x09
        str editor_name; // ID 0x01
}